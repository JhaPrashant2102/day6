/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package DummyTesting;

import org.junit.Test;
import org.junit.Assert;
import static org.junit.Assert.*;

public class LibraryTest {

	// UC10

	@Test
	public void givenFirstName_WhenProper_ShouldReturnTrue() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validateFirstName("Prashant");
		Assert.assertTrue(result);
	}

	@Test
	public void givenFirstName_WhenNotProper_ShouldReturnFalse() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validateFirstName("prashant");
		Assert.assertFalse(result);
	}

	@Test
	public void givenLastName_WhenProper_ShouldReturnTrue() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validateLastName("Jha");
		Assert.assertTrue(result);
	}

	@Test
	public void givenLastName_WhenNotProper_ShouldReturnFalse() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validateLastName("jha");
		Assert.assertFalse(result);
	}
	
	@Test
	public void givenPhoneNumber_WhenProper_ShouldReturnTrue() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validatePhoneNumber("91 9876543210");
		Assert.assertTrue(result);
	}
	
	@Test
	public void givenPhoneNumber_WhenNotProper_ShouldReturnFalse() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validatePhoneNumber("919876543210");
		Assert.assertFalse(result);
	}
	
	@Test
	public void givenPassword_WhenProper_ShouldReturnTrue() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validatePassword("Pr@sha9t");
		Assert.assertTrue(result);
	}
	
	@Test
	public void givenPassword_WhenNotProper_ShouldReturnFalse() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validatePassword("Pr@@shant");
		Assert.assertFalse(result);
	}
	
	@Test
	public void givenEmailId_WhenProper_ShouldReturnTrue() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validateEmailId("prashant.jha@gmail.com");
		Assert.assertTrue(result);
	}
	
	@Test
	public void givenEmailId_WhenNotProper_ShouldReturnFalse() {
		UserValidator validator = new UserValidator();
		boolean result = validator.validateEmailId(".jha@gmail.com");
		Assert.assertFalse(result);
	}
}
